{"version":3,"sources":["Components/Layout/Header.jsx","Components/Weather/Cloud.jsx","Components/WeatherDetails/ClosePopup.jsx","Components/WeatherDetails/Forecast.jsx","Components/WeatherDetails/OpenPopup.jsx","Components/Weather/WeatherCard.jsx","Components/Weather/SearchCity.jsx","Components/Layout/Footer.jsx","App.js","index.js"],"names":["header","className","Cloud","Popup","props","trigger","onClick","setTrigger","children","CollapsibleMenu","hiddenTexts","label","value","React","Component","CollapsibleTxt","this","map","hiddenText","MenuItem","handleToggleVisibility","bind","state","visibility","setState","prevState","activeStatus","Test","useState","buttonPopup","setButtonPopup","maxMinHumidTemp","min","max","humidity","WeatherCard","weatherBackground","cityName","moment","format","weatherIcon","tempCelsius","description","charAt","toLowerCase","slice","tempMin","tempMax","error","role","formInputSearch","onSubmit","loadweather","type","placeholder","name","autoComplete","Footer","today","Date","getFullYear","App","checkWeather","event","a","preventDefault","city","target","elements","fetch","process","api_call","json","weatherData","main","weather","celsius","calCelsius","temp","temp_max","temp_min","weatherIcons","id","weatherBackgrounds","console","log","undefined","icon","bg","thunderstorm","drizzle","rain","snow","atmosphere","clear","clouds","thunderstormWeather","drizzleWeather","rainWeather","snowWeather","atmosphereWeather","clearWeather","cloudsWeather","icons","rangeId","background","Math","floor","Header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c32fd1f5.chunk.js","sourcesContent":["const header = () => {\n  return (\n    <header className=\"App-header\">\n      <section className=\"content\">\n        <h1>\n          Weather App <span className=\"tagline\"> React </span>\n        </h1>\n      </section>\n    </header>\n  );\n};\n\nexport default header;\n","export default function Cloud() {\n  return (\n    <div>\n      <div className=\"cloud-container\">\n        <span className=\"cloud-main\"></span>\n        <span className=\"cloud-one\"></span>\n        <span className=\"cloud-two\"></span>\n      </div>\n      <div className=\"cloud-container2\">\n        <span className=\"cloud-main\"></span>\n        <span className=\"cloud-one\"></span>\n        <span className=\"cloud-two\"></span>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Popup(props) {\n  return props.trigger ? (\n    <div className=\"popup\">\n      <button\n        className=\"btn--close-popup\"\n        onClick={() => props.setTrigger(false)}\n      >\n        <p>x</p>\n      </button>\n      {props.children}\n    </div>\n  ) : (\n \"\"\n  );\n}\n\nexport default Popup;\n\n\n  \n\n  /* border-style: solid;\n  border-width: 1px 1px 5px; */","import React from \"react\";\n\n//  Collapsible Menu\nexport default class CollapsibleMenu extends React.Component {\n  render() {\n    const hiddenTexts = [\n      {\n        label: \"Monday - 08 - 2021\",\n        value: \"Temperature Details\",\n      },\n      {\n        label: \"Tuesday - 08 - 2021\",\n        value: \" Temperature Details\",\n      },\n      {\n        label: \"Wednsday - 08 - 2021\",\n        value: \"Temperature Details\",\n      },\n      {\n        label: \"Thursday - 08 - 2021\",\n        value: \"Temperature Details\",\n      },\n      {\n        label: \"Fryday - 08 - 2021\",\n        value: \"Temperature Details\",\n      },\n    ];\n    return <CollapsibleTxt hiddenTexts={hiddenTexts} />;\n  }\n}\n//  Collapsible Text\n\nclass CollapsibleTxt extends React.Component {\n  render() {\n    return (\n      <div className=\"collapsibleMenu\">\n        {this.props.hiddenTexts.map((hiddenText) => (\n          <MenuItem key={hiddenText.label} hiddenText={hiddenText} />\n        ))}\n      </div>\n    );\n  }\n}\n//  Menu Item\nclass MenuItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggleVisibility = this.handleToggleVisibility.bind(this);\n    this.state = {\n      visibility: false,\n    };\n  }\n\n  handleToggleVisibility() {\n    this.setState((prevState) => {\n      return {\n        visibility: !prevState.visibility,\n      };\n    });\n  }\n  render() {\n    const activeStatus = this.state.visibility ? \"active\" : \"\";\n\n    return (\n      <div>\n        <button\n          className=\"collapsibleMenu--button\"\n          onClick={this.handleToggleVisibility}\n        >\n          {this.props.hiddenText.label}\n          <span className=\"btn-icon\">{this.state.visibility ? \"-\" : \"+\"} </span>\n        </button>\n        <p className={`collapsibleMenu--content ${activeStatus}`}>\n          {this.props.hiddenText.value}\n        </p>\n      </div>\n    );\n  }\n}\n","import { useState } from \"react\";\n\nimport Popup from \"./ClosePopup\";\n\nimport CollapsibleMenu from \"./Forecast\";\n\nfunction Test() {\n  const [buttonPopup, setButtonPopup] = useState(false);\n  return (\n    <div>\n      <button className=\"btn--open-popup\" onClick={() => setButtonPopup(true)}>\n        <p> Forecast</p>\n      </button>\n\n      <Popup trigger={buttonPopup} setTrigger={setButtonPopup}>\n   \n        <CollapsibleMenu />\n      </Popup>\n    </div>\n  );\n}\n\nexport default Test;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport \"../../Assets/weather-icons/css/weather-icons.min.css\";\nimport Popup from \"../WeatherDetails/OpenPopup\";\n\n\n\nconst WeatherCard = (props) => {\n  return (\n    <div className={`weather-container ${props.weatherBackground}`}>\n      <div className=\"location-box\">\n        <p className=\"city\">{props.cityName}</p>\n\n        <div className=\"timestamp\">\n          <p className=\"txt-sm\">\n            {moment().format(\"dddd\")} | <time>{moment().format(\"hh:mm\")}</time>{\" \"}\n            |{moment().format(\"LL\")}\n          </p>\n        </div>\n\n        <div className=\"tempContainer\">\n          <div className=\"leftButton\"></div>\n\n          <div className=\"mainTemp\">\n            <i className={`wi ${props.weatherIcon}`} />\n            {props.tempCelsius ? <p>{props.tempCelsius} &deg;C</p> : null}\n            <p className=\"conditions\">\n              {props.description.charAt(0).toLowerCase() +\n                props.description.slice(1).toLowerCase()}\n            </p>\n          </div>\n\n          <div className=\"rightButton\"></div>\n        </div>\n        {maxMinHumidTemp(\n          props.tempMin,\n          props.tempMax,\n          props.humidity\n          // props.tempTime, // -testpressure\n          // props.pressure // -test\n          // props.sunrise\n        )}\n        <Popup />\n      </div>\n    </div>\n  );\n};\n\nfunction maxMinHumidTemp(min, max, humidity) {\n  if (max && min && humidity) {\n    return (\n      <div>\n        <div className=\"weather\">\n          <p className=\"txt-left txt-lg\"> Min Temp:</p>\n          <p className=\"txt-right txt-lg\">{min}&deg;C</p>\n          <span className=\"clearfix\"> </span>\n          <p className=\"txt-left txt-lg\"> Max Temp:</p>\n          <p className=\"txt-right txt-lg\">{max}&deg;C</p>\n          <span className=\"clearfix\"> </span>\n          <p className=\"txt-left txt-lg\"> Humidity:</p>\n          <p className=\"txt-right txt-lg\">{humidity} 0%</p>\n          <span className=\"clearfix\"> </span>\n          {/* <p> {timezone}</p> -test */}\n          {/* <p> {pressure}</p> -test */}\n          {/* <p> {sunrise}</p> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WeatherCard;\n","import React from \"react\";\n\nconst formInputSearch = (props) => {\n  return (\n    <div>\n      <form className=\"margin\" onSubmit={props.loadweather}>\n        <div>{props.error ? error() : \"\"}</div>\n\n        <input type=\"text\" placeholder=\"City\" name=\"city\" autoComplete=\"on\" />\n\n        <button className=\"btn btn--submit\">Check Weather</button>\n      </form>\n    </div>\n  );\n};\n\nconst error = (props) => {\n  return (\n    <div className=\"alert-danger\" role=\"alert\">\n      <p> OMG you are wrong again. Please, Enter the correct city name...!</p>\n    </div>\n  );\n};\n\nexport default formInputSearch;\n","const Footer = () => {\n  const today = new Date();\n  return (\n    <footer className=\"footer\">\n      <p>EPHREM | Copyright &copy; {today.getFullYear()} </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./Components/Layout/Header\";\nimport Cloud from \"./Components/Weather/Cloud\";\nimport WeatherCard from \"./Components/Weather/WeatherCard\";\nimport Form from \"./Components/Weather/SearchCity\";\nimport Footer from \"./Components/Layout/Footer\";\n\nconst Api_Key = process.env.REACT_APP_WEATHER_API_KEY;\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      tempMax: \"\",\n      tempMin: \"\",\n      humidity: \"\",\n      description: \"\",\n      error: false,\n      bg: undefined,\n      // TempTime: \"\", // -test\n      // Pressure: \"\", // -test\n      // Sunrise: \"\",\n    };\n    // Weather Icons\n    this.weatherIcon = {\n      thunderstorm: \"wi-thunderstorm\",\n      drizzle: \"wi-sleet\",\n      rain: \"wi-storm-showers\",\n      snow: \"wi-snow\",\n      atmosphere: \"wi-fog\",\n      clear: \"wi-day-sunny\",\n      clouds: \"wi-day-fog\",\n    };\n\n    // Weather Background\n\n    this.weatherBackground = {\n      thunderstormWeather: \"bg-thunderstorm\",\n      drizzleWeather: \"bg-sleet\",\n      rainWeather: \"bg-storm-showers\",\n      snowWeather: \"bg-snow\",\n      atmosphereWeather: \"bg-fog\",\n      clearWeather: \"bg-day-sunny\",\n      cloudsWeather: \"bg-day-fog\",\n    };\n  }\n  // Weather Icons\n  weatherIcons(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.clouds });\n        break;\n      default:\n        this.setState({ icon: icons.clouds });\n    }\n  }\n  // Weather Backgrounds\n  weatherBackgrounds(background, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ bg: background.thunderstormWeather });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ bg: background.drizzleWeather });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ bg: background.rainWeather });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ bg: background.snowWeather });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ bg: background.atmosphereWeather });\n        break;\n      case rangeId === 800:\n        this.setState({ bg: background.clearWeather });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ bg: background.cloudsWeather });\n        break;\n      default:\n        this.setState({ bg: background.cloudsWeather });\n    }\n  }\n\n  calCelsius(temp) {\n    let celsius = Math.floor(temp - 273.15);\n    return celsius;\n  }\n\n  checkWeather = async (event) => {\n    event.preventDefault();\n\n    const city = event.target.elements.city.value;\n\n    if (city) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city}&type=hour&appid=${Api_Key}`\n        // `http://api.openweathermap.org/data/2.5/onecall?q=${city}&type=hour&appid=${Api_Key}`\n\n        // `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${Api_Key}`\n        // `https://api.openweathermap.org/data/2.5/onecall?lat={lat}&lon={lon}&exclude={part}&appid={API key}`\n        // https://api.openweathermap.org/data/2.5/weather?q=Amsterdam&appid=da1b504a959889b47a06cf25dcff8fe9\n      );\n\n      const weatherData = await api_call.json();\n\n      this.setState({\n        city: `${weatherData.name}`,\n\n        main: weatherData.weather[0].main,\n\n        celsius: this.calCelsius(weatherData.main.temp),\n        temp_max: this.calCelsius(weatherData.main.temp_max),\n        temp_min: this.calCelsius(weatherData.main.temp_min),\n        humidity: weatherData.main.humidity,\n        description: weatherData.weather[0].description,\n\n        error: false,\n        // timezone: response.timezone, // -test\n        // pressure: response.pressure, // -test\n        // sys: response.weather[0].sys, // -test\n\n        //  Sunrise: {new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString(\"en-IN\")} ,\n        //   Sunrise: {new Date(weatherData.sys.sunset * 1000).toLocaleTimeString(\"en-IN\")},\n        //  Day: {moment().format(\"dddd\")},\n        //  Date: {moment().format(\"LL\")},\n      });\n\n      // Setting icons = backgrounds\n      this.weatherIcons(this.weatherIcon, weatherData.weather[0].id);\n      this.weatherBackgrounds(\n        this.weatherBackground,\n        weatherData.weather[0].id\n      );\n\n      console.log(weatherData);\n    } else {\n      this.setState({\n        error: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Cloud />\n        <Form loadweather={this.checkWeather} error={this.state.error} />\n        <WeatherCard\n          cityName={this.state.city} // City\n          weatherIcon={this.state.icon} // Icons\n          weatherBackground={this.state.bg} // background\n          tempCelsius={this.state.celsius} // Main Temprature\n          tempMax={this.state.temp_max} // Mximum Temprature\n          tempMin={this.state.temp_min} // Minimum Temprature\n          humidity={this.state.humidity} // Humidity Temprature\n          description={this.state.description} // Temprature Condition\n          // tempTime={this.state.timezone} // - test\n          // Pressure={this.state.pressure} // - test\n          // Sunrise={this.state.sunrise} //  - test\n        />\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Assets/Styles/index.css\";\n\n// import \"bootstrap/dist/css/bootstrap.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}